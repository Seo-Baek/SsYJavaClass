package Class;

/*
 * 클래스(Class)?
 * 	1. 클래스는 객체를 만들기 위한 설계도(틀, 도면)이다.
 * 	2. 자바는 클래스 단위로 프로그래밍을 한다.
 * 	3. 클래스를 구성하느 것을 멤버(member)라고 한다.
 * 	4. 멤버 = 속성(멤버변수) + 기능(멤버메소드)
 * 			=> 속성 : 멤버변수 - 클래스의 특징 - 명사적 개념
 * 			=> 기능 : 멤버메소드 - 클래스의 행위 - 동사적 개념
 * 	5. 클래스 구성 : 클래스 헤더, 멤버변수, 멤버메소드, 생성자
 * 
 * 	[클래스형식]
 * 		[접근지정자] class 클래스이름 {
 * 				멤버변수;
 * 				생성자();
 * 				멤버메소드(){     };
 * 		}
 * 	- 클래스 이름 : 대문자로 시작(식별자)
 */

public class Ex01 {
	
	// 멤버변수는 초기값을 설정하지 않으면 JVM이
	// 해당 데이터 타입(자료형)에 맞게 알아서 default 값을 할당해 줌
	
	int num; 	// 멤버변수 - 전역변수
	String str; // 멤버변수
	
	void display() {
		int su = 10;
		System.out.println("멤버변수(전역변수) : " + num);
		System.out.println("멤버변수(전역변수) : " + str);
		System.out.println("변수(지역변수) : " + su);
	}
	
	public static void main(String[] args) {

		// Ex01 클래스 객체 생성 -메모리 할당
		// 1단계 : 클래스 선언
		// 형식) 클래스이름 참조변수; 
		//참조변수 - heap 메모리에 객체 만들어지는 주소값을 가진 변수
		//Ex01 ex;
		
		// 2단계 : 클래스를 메모리에 생성
		// 형식) 참조변수 = new 생성자();
		//ex = new Ex01();
		
		// 1단계 + 2단계 : 클래스 선언 및 클래스 객체 생성
		Ex01 ex = new Ex01();
		
		// 3단계 : 참조변수를 이용하여 객체에 접근.
		//		  객체에 접근 시 .(도트연산자) 연산자를 이용하여 접근.
		
		ex.num = 100;
		ex.str = "abc";
		
		ex.display();
		
		Ex01 ex1 = new Ex01();	//Ex01형의 객체를 위한 새로운 공간 생성
		ex1.num = 34;
		ex1.str = "이순신";
		
		ex1.display();
		
		// 두 객체의 주소가 같은지 혹은 다른지 확인.
		
		System.out.println("ex ==> " + ex);
		System.out.println("ex1 ==> " + ex1);
		
		
		
	}

}
